name: "Deploy to GCP"

on:
  workflow_run:
    workflows: [Build and Push to Artifact Registry]
    types:
      - completed
  workflow_dispatch:

jobs:
  terraform:
    name: "Terraform Infrastructure Change Management"
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    defaults:
      run:
        shell: bash

        # We keep Terraform files in the terraform directory.

        working-directory: ./deployment

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Terraform init
        id: init
        run: |
          terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}

      - uses: actions/github-script@v7

        if: github.event_name == 'pull_request'

        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"

        with:
          script: |

            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`

            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`

            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`



            <details><summary>Show Plan</summary>



            \`\`\`\n

            ${process.env.PLAN}

            \`\`\`



            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;



            github.rest.issues.createComment({

              issue_number: context.issue.number,

              owner: context.repo.owner,

              repo: context.repo.repo,

              body: output

            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
